list("ALÔ MUNDO") -> TRANSFORMA UMA STRING EM UMA LISTA DE TODOS ELEMENTOS

--------------------------------------------------------------

""join.(lista) -> JUNTA OS ELEMENTOS EM UM ÚNICA STRING

1º PASSE, ENTRE ASPAS, O ELEMENTO PELO QUAL DESEJA JUNTAR TUDO.

2º ESCREVE JOIN

3º PONTO

4º ENTRE PARÊNTESES, PASSE O OBJETO

--------------------------------------------------------------------

nome = "Jonatas Lopes de Sousa"
nome.startswith("Jo") -> True

1º ESCREVA O NOME DO OBJETO

2º PONTO

3º startswith

4º ENTRE PARÊNTESES, ESCREVA A STRING QUE DESEJA TESTAR

-------------------------------------------------------------------------
nome = "Jonatas Lopes de Sousa"
nome.endswith("sa") -> True

1º ESCREVA O NOME DO OBJETO

2º PONTO

3º endswith

4º ENTRE PARÊNTESES, ESCREVA A STRING QUE DESEJA TESTAR

---------------------------------------------------------------------------
nome = "Jonatas Lopes de Sousa"
nome.lower() -> "jonatas lopes de sousa"

1º ESCREVA O NOME DO OBJETO

2º PONTO

3º ESCREVA lower()
----------------------------------------------------------------------------
nome = "Jonatas Lopes de Sousa"
nome.upper() -> "JONATAS LOPES DE SOUSA"

1º ESCREVA O NOME DO OBJETO

2º PONTO

3º ESCREVA upper()
---------------------------------------------------------------------------
OPERADORES DE PERTENCIMENTO EM STRINGS:

nome = "Jonatas Lopes de Sousa"
print("Jonatas" in nome) -> True

------------------------------------------------------------------------
nome = "Jonatas Lopes de Sousa" -> CONTA QUANTAS VEZES APARECE UM ELEMENTO.
nome.count("o") -> 3

1º ESCREVA O NOME DO OBJETO

2º PONTO

3º count

4º ENTRE PARÊNTESES, ESCREVA A STRING QUE DESEJA CONTAR.
---------------------------------------------------------------------------------
RETORNA O PRIMEIRO ÍNDICE DA STRING ENCONTRA OU -1 CASO NÃO ENCONTRADO
.find(STRING, ONDE COMEÇAR[OPCIONAL], ONDE TERMINAR[OPCIONAL])
nome = "Jonatas Lopes de Sousa"  
nome.find("Jonatas") -> 0
nome.find("Jonatas", 1) -> -1

1º ESCREVA O NOME DO OBJETO

2º PONTO

3º find

4º ENTRE PARÊNTESES, ESCREVA A STRING QUE DESEJA CONTAR.

5º OPCIONAL: O PRÓXIMO É O ÍNDICE ONDE COMEÇAR.

6º OPCIONAL: O PRÓXIMO É O ÍNDICE ONDE TERMINAR.
------------------------------------------------------------------------
RETORNA O PRIMEIRO ÍNDICE DA STRING ENCONTRA OU -1 CASO NÃO ENCONTRADO

DIFERENTE DE FIND, ESTE MÉTODO PROCURA DO FIM PARA O COMEÇO, MAS 
RETORNA O ÍNDICE NORMAL SE ENCONTRAR O VALOR OU -1 CASO CONTRÁRIO.

.rfind(STRING, ONDE COMEÇAR[OPCIONAL], ONDE TERMINAR[OPCIONAL])

nome = "Jonatas Lopes de Sousa"  
nome.rfind("a") -> 21

1º ESCREVA O NOME DO OBJETO

2º PONTO

3º rfind

4º ENTRE PARÊNTESES, ESCREVA A STRING QUE DESEJA CONTAR.

5º OPCIONAL: O PRÓXIMO É O ÍNDICE ONDE COMEÇAR.

6º OPCIONAL: O PRÓXIMO É O ÍNDICE ONDE TERMINAR.
--------------------------------------------------------------------------------
INDEX RETORNA O NÚMERO DO ÍNDICE ONDE INICIA A STRING.

FUNCIONA IGUAL À FIND, MAS CASO A STRING NÃO SEJA ENCONTRADA, LANÇA UMA
EXCEÇÃO VALUEERROR.

nome = "Jonatas Lopes de Sousa"  
nome.index("Jonatas") -> 0
nome.index("Jonatas", 1) -> ValueError Exception

1º ESCREVA O NOME DO OBJETO

2º PONTO

3º index

4º ENTRE PARÊNTESES, ESCREVA A STRING QUE DESEJA CONTAR.

5º OPCIONAL: O PRÓXIMO É O ÍNDICE ONDE COMEÇAR.

6º OPCIONAL: O PRÓXIMO É O ÍNDICE ONDE TERMINAR.
----------------------------------------------------------------------------
RINDEX RETORNA O NÚMERO DO ÍNDICE ONDE INICIA A STRING.

FUNCIONA IGUAL À RFIND, MAS CASO A STRING NÃO SEJA ENCONTRADA, LANÇA UMA
EXCEÇÃO VALUEERROR.

nome = "Jonatas Lopes de Sousa"  
nome.rindex("Jonatas") -> 0
nome.rindex("Jonatas", 1) -> ValueError Exception

1º ESCREVA O NOME DO OBJETO

2º PONTO

3º rindex

4º ENTRE PARÊNTESES, ESCREVA A STRING QUE DESEJA CONTAR.

5º OPCIONAL: O PRÓXIMO É O ÍNDICE ONDE COMEÇAR.

6º OPCIONAL: O PRÓXIMO É O ÍNDICE ONDE TERMINAR.
------------------------------------------------------------------------
CENTER: USA SEU PRIMEIRO PARÂMETRO PARA AUMENTAR O TAMANHO DA STRING,
INCLUINDO O SEU CONTEÚDO ATUAL, E DEPOIS TENTAR DISTRIBUIR O OS ESPAÇOS
DE FORMA IGUAL DE AMBOS OS LADOS PARA CENTRALIZAR.

nome = "Jonatas"  
nome.center(20,"-"[OPCIONAL])
>>> "------Jonatas-------"

1º ESCREVA O NOME DO OBJETO

2º PONTO

3º center

4º ENTRE PARÊNTESES, ESCREVA O NÚMERO DE CARACTERES A ACRESCENTAR.

5º OPCIONAL: CARACTERE PARA ADICIONAR NOS ESPAÇOS EM BRANCO.
-----------------------------------------------------------------------
LJUST:A DICIONA ESPAÇOS À ESQUERDA.

nome = "Jonatas"  
nome.ljust(20,"-"[OPCIONAL])
>>> "-------------Jonatas"

1º ESCREVA O NOME DO OBJETO

2º PONTO

3º ljust

4º ENTRE PARÊNTESES, ESCREVA O NÚMERO DE CARACTERES A ACRESCENTAR.

5º OPCIONAL: CARACTERE PARA ADICIONAR NOS ESPAÇOS EM BRANCO.
------------------------------------------------------------------------
RJUST: ADICIONA ESPAÇOS À DIREITA.

nome = "Jonatas"  
nome.rjust(20,"-"[OPCIONAL])
>>> "Jonatas-------------"

1º ESCREVA O NOME DO OBJETO

2º PONTO

3º rjust

4º ENTRE PARÊNTESES, ESCREVA O NÚMERO DE CARACTERES A ACRESCENTAR.

5º OPCIONAL: CARACTERE PARA ADICIONAR NOS ESPAÇOS EM BRANCO.
------------------------------------------------------------------------------
SPLIT: QUEBRA UMA STRING EM UMA LISTA EM PEDAÇOS.
SE PASSARMOS COMO PARÂMETRO "" OU NADA, ELA QUEBRA TODOS OS CARACTERES
SEPARADAMENTE.

nome = "Jonatas"  
nome.split()
>>> ["J","o","n","a","t","a","s"]
1º ESCREVA O NOME DO OBJETO

2º PONTO

3º split()

4º [OPCIONAL]ESCREVA O CARACTERE ONDE DESEJA QUEBRAR.

--------------------------------------------------------------------------
SPLITLINES: SEPARA ELEMENTOS O CONTEÚDO DE CADA LINHA.
nome = "Jonatas\nLopes\nde\nSousa"  
nome.splitlines()
>>> ["Jonatas","Lopes","de","Sousa"]
1º ESCREVA O NOME DO OBJETO

2º PONTO

3º splitlines()
--------------------------------------------------------------------------
REPLACE: SUBSTITUI ELEMENTOS. TROCAR SEU PRIMEIRO PARÂMETRO PELO SEGUNDO.

nome = "Jonatas Lopes de Sousa"  
nome.replace("o", "a") 
>>> "Janatas Lapes de Sausa"  -> NOTE QUE TODOS OS ELEMENTOS o FORAM REMOVIDOS

nome = "Jonatas Lopes de Sousa"  
nome.replace("o", "a", 1) 
>>> "Janatas Lopes de Sousa"  -> NOTE QUE SOMENTE O PRIMERO o FOI REMOVIDO.

1º ESCREVA O NOME DO OBJETO

2º PONTO

3º replace()

4º ELEMENTO NA STRING QUE QUER SUBSTITUIR.

4º NOVO ELEMENTO PARA COLOCAR NO LUGAR DO ANTERIOR

5º [OPCIONAL]: QUANTIDADE DE VEZES PARA TROCAR: PADRÃO TROCA TUDO
--------------------------------------------------------------------------------------
STRIP: REMOVE ESPAÇOS NAS LATERAIS DE UMA STRING

nome = "         Jonatas            "  
nome.strip()
>>> "Jonatas"

1º ESCREVA O NOME DO OBJETO

2º PONTO

3º strip()

4ª [OPCIONAL] ELEMENTOS QUE DESEJA REMOVER.

LEMBRE-SE: QUE STRIP FUNCIONA DE FORA PARA DENTRO:

SE VOCÊ DESEJA REMOVER UM ELEMENTO MAIS À FUNDO, PRECISA REMOVER OS MAIS INTERNOS.

----------------------------------------------------------------------------------
LSTRIP: REMOVE ESPAÇOS NAS LATERAIS À ESQUERDA.

nome = "         Jonatas"  
nome.lstrip()
>>> "Jonatas"

1º ESCREVA O NOME DO OBJETO

2º PONTO

3º lstrip()

4º [OPCIONAL] ELEMENTO QUE DESEJA REMOVER.


LEMBRE-SE: QUE LSTRIP FUNCIONA DE FORA PARA DENTRO:

SE VOCÊ DESEJA REMOVER UM ELEMENTO MAIS À FUNDO, PRECISA REMOVER OS MAIS INTERNOS.

----------------------------------------------------------------------------------
RSTRIP: REMOVE ESPAÇOS NAS LATERAIS À DIREITA.

nome = "Jonatas            "  
nome.rstrip()
>>> "Jonatas"

1º ESCREVA O NOME DO OBJETO

2º PONTO

3º rstrip()

4º [OPCIONAL]ELEMENTO QUE DESEJA REMOVER

LEMBRE-SE: QUE RSTRIP FUNCIONA DE FORA PARA DENTRO:

SE VOCÊ DESEJA REMOVER UM ELEMENTO MAIS À FUNDO, PRECISA REMOVER OS MAIS INTERNOS.

---------------------------------------------------------------------------------
ISALNUM: RETORNA O VALOR BOOLEANO TRUE QUANDO OS CARACTERES SÃO
ALFANUMÉRICOS, OU SEJA, QUANDO SÃO APENAS LETRAS OU NÚMEROS. ESPAÇOS,
OU QUALQUER OUTRO TIPO DE CARACTERE SERÁ CONSIDERADO FALSO.

nome = "123Jonatas"
nome.isalnum()
>>> True

nome = "123 Jonatas"
nome.isalnum()
>>> False

1º ESCREVA O NOME DO OBJETO

2º PONTO

3º isalnum()
--------------------------------------------------------------------------------
ISALPHA: RETORNA O VALOR BOOLEANO TRUE QUANDO OS CARACTERES SÃO
APENAS LETRAS. ESPAÇOS,  OU QUALQUER OUTRO TIPO DE CARACTERE
 SERÁ CONSIDERADO FALSO.

nome = "Jonatas"
nome.isalpha()
>>> True

nome = "123Jonatas"
nome.isalpha()
>>> False

1º ESCREVA O NOME DO OBJETO

2º PONTO

3º isalpha()
--------------------------------------------------------------------------
ISDIGIT: RETORNA O VALOR BOOLEANO TRUE QUANDO OS CARACTERES SÃO
APENAS NUMÉRICOS INTEIROS, OU QUANDO SE REFEREM À ELES (\u0f29). CASO
CONTRÁRIO, SERÁ FALSO.
nome = "Jonatas"
nome.isdigit()
>>> False

nome = "123"
nome.isdigit()
>>> True

1º ESCREVA O NOME DO OBJETO

2º PONTO

3º isdigit()
--------------------------------------------------------------------
ISNUMERIC: RETORNA O VALOR BOOLEANO TRUE QUANDO OS CARACTERES 
REFEREM -SE À NUMEROS DE FORMA GERAL(\u2153). MAIS ABRANGENTE QUE ISDIGIT.
(u\2153) -> 1/3 
CONTRÁRIO, SERÁ FALSO.
nome = "u\2153"
nome.isnumeric()
>>> True

nome = "123"
nome.isnumeric()
>>> True

1º ESCREVA O NOME DO OBJETO

2º PONTO

3º isnumeric()
-------------------------------------------------------------------------
ISUPPER: RETORNA O VALOR BOOLEANO TRUE QUANDO TODOS CARACTERES 
DA STRING ESTÃO EM MAIÚSCULO. CONTRÁRIO, SERÁ FALSO.
nome = "aBc"
nome.isupper()
>>> False

nome = "ABC"
nome.isupper()
>>> True

1º ESCREVA O NOME DO OBJETO

2º PONTO

3º isupper()
------------------------------------------------------------------------
ISLOWER: RETORNA O VALOR BOOLEANO TRUE QUANDO TODOS CARACTERES 
DA STRING ESTÃO EM MINÚSCULO. CONTRÁRIO, SERÁ FALSO.
nome = "aBc"
nome.islower()
>>> False

nome = "abc"
nome.islower()
>>> True

1º ESCREVA O NOME DO OBJETO

2º PONTO

3º islower()
------------------------------------------------------------------------------
ISSPACE: RETORNA O VALOR BOOLEANO TRUE QUANDO TODOS CARACTERES 
DA STRING SÃO CARACTERES EM BRANCO, CASO CONTRÁRIO, SERÁ FALSO.

\n -> Quebra de linha
\t -> Marca de tabulação, quando imprimir a string haverá um tab.
\v \a -> TAB vertical.
\r -> Retorno de carro
\b = Back Space 

nome = "#$#"
nome.isspace()
>>> False

nome = " \n"
nome.isspace()
>>> True

1º ESCREVA O NOME DO OBJETO

2º PONTO

3º isspace()
---------------------------------------------------------------------
ISPRINTABLE: RETORNA O VALOR BOOLEANO TRUE SE TODOS CARACTERES 
DA STRING SÃO PUDEREM SER IMPRESSOS NO PYTHON. 
CASO CONTRÁRIO, SERÁ FALSO.


nome = "\n\t"
nome.isprintable()
>>> False

nome = "Eu sou o Jonatas"
nome.isprintable()
>>> True

1º ESCREVA O NOME DO OBJETO

2º PONTO

3º isprintable()
---------------------------------------------------------------------------
.format

STRINGS TEM ALINHAMENTO PADRÃO À ESQUERDA <
< espaços À esquerda {0:<10} .format("a") >>> "a         "
> espaços À direita {0:>10} .format("a") >>>  "         a"
^ espaços centralizado {0:^10} .format("a") >>>  "     a     "
> espaços centralizado {0:!^10} .format("a") >>>  "!!!!a!!!!!"

NÚMEROS TEM ALINHAMENTO PADRÃO À DIREITA >
 {0:010} .format(123) >>> 0000000123 
 {0:*=10} .format(123) >>>  *******123
{0:*<10} .format(123) >>>  123*******
{0:*>10} .format(123) >>>  *******123
{0:*^10} .format(123) >>>  ***123****
{0:10,}.format(1230) >>>'     1,230' -> separador de milhar.
--------------------------------------------------------------------------